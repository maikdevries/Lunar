{
	"plugins": [
		"node"
	],
	"env": {
		"node": true,
		"es6": true
	},
	"parserOptions": {
		"ecmaVersion": 2020
	},
	"rules": {
		"for-direction": "error",
		"getter-return": ["error", { "allowImplicit": true }],
		"no-async-promise-executor": "error",
		"no-await-in-loop": "error",
		"no-compare-neg-zero": "error",
		"no-cond-assign": ["error", "always"],
		"no-console": ["warn", { "allow": ["warn", "error"] }],
		"no-constant-condition": "error",
		"no-control-regex": "error",
		"no-debugger": "error",
		"no-dupe-args": "error",
		"no-dupe-keys": "error",
		"no-duplicate-case": "error",
		"no-empty": "error",
		"no-empty-character-class": "error",
		"no-ex-assign": "error",
		"no-extra-boolean-cast": "error",
		"no-extra-parens": ["error", "functions"],
		"no-extra-semi": "error",
		"no-func-assign": "error",
		"no-inner-declarations": "error",
		"no-invalid-regexp": "error",
		"no-irregular-whitespace": "error",
		"no-misleading-character-class": "error",
		"no-obj-calls": "error",
		"no-prototype-builtins": "error",
		"no-regex-spaces": "error",
		"no-sparse-arrays": "error",
		"no-template-curly-in-string": "error",
		"no-unexpected-multiline": "error",
		"no-unreachable": "error",
		"no-unsafe-finally": "error",
		"no-unsafe-negation": "error",
		"require-atomic-updates": "error",
		"use-isnan": "error",
		"valid-typeof": ["error", { "requireStringLiterals": true }],

		"accessor-pairs": "off",
		"array-callback-return": ["error", { "allowImplicit": true }],
		"block-scoped-var": "error",
		"class-methods-use-this": "error",
		"complexity": ["error", 18],
		"consistent-return": "off",
		"curly": ["error", "multi-line"],
		"default-case": ["error", { "commentPattern": "^no\\sdefault" }],
		"dot-location": ["error", "property"],
		"dot-notation": ["error", { "allowKeywords": true }],
		"eqeqeq": ["error", "always", { "null": "ignore" }],
		"guard-for-in": "error",
		"max-classes-per-file": ["error", 1],
		"no-alert": "error",
		"no-caller": "error",
		"no-case-declarations": "error",
		"no-div-regex": "off",
		"no-else-return": ["error", { "allowElseIf": false }],
		"no-empty-function": ["error", { "allow": ["arrowFunctions"] }],
		"no-empty-pattern": "error",
		"no-eq-null": "error",
		"no-eval": "error",
		"no-extend-native": "error",
		"no-extra-bind": "error",
		"no-extra-label": "error",
		"no-fallthrough": "error",
		"no-floating-decimal": "error",
		"no-global-assign": "error",
		"no-implicit-coercion": "error",
		"no-implicit-globals": "off",
		"no-implied-eval": "error",
		"no-invalid-this": "error",
		"no-iterator": "error",
		"no-labels": ["error", { "allowLoop": false, "allowSwitch": false }],
		"no-lone-blocks": "error",
		"no-loop-func": "error",
		"no-magic-numbers": "off",
		"no-multi-spaces": "error",
		"no-multi-str": "error",
		"no-new": "error",
		"no-new-func": "error",
		"no-new-wrappers": "error",
		"no-octal": "error",
		"no-octal-escape": "error",
		"no-param-reassign": [
			"error",
			{
				"props": false,
				"ignorePropertyModificationsFor": ["req", "request", "res", "response"]
			}
		],
		"no-proto": "error",
		"no-redeclare": "error",
		"no-restricted-properties": [
			"error",
			{
				"object": "arguments",
				"property": "callee",
				"message": "arguments.callee is deprecated"
			},
			{
				"object": "global",
				"property": "isFinite",
				"message": "Please use Number.isFinite instead"
			},
			{
				"object": "self",
				"property": "isFinite",
				"message": "Please use Number.isFinite instead"
			},
			{
				"object": "window",
				"property": "isFinite",
				"message": "Please use Number.isFinite instead"
			},
			{
				"object": "global",
				"property": "isNaN",
				"message": "Please use Number.isNaN instead"
			},
			{
				"object": "self",
				"property": "isNaN",
				"message": "Please use Number.isNaN instead"
			},
			{
				"object": "window",
				"property": "isNaN",
				"message": "Please use Number.isNaN instead"
			},
			{
				"property": "__defineGetter__",
				"message": "Please use Object.defineProperty instead."
			},
			{
				"property": "__defineSetter__",
				"message": "Please use Object.defineProperty instead."
			},
			{
				"object": "Math",
				"property": "pow",
				"message": "Use the exponentiation operator (**) instead."
			}
		],
		"no-return-assign": ["error", "always"],
		"no-return-await": "error",
		"no-script-url": "error",
		"no-self-assign": ["error", { "props": true }],
		"no-self-compare": "error",
		"no-sequences": "error",
		"no-throw-literal": "error",
		"no-unmodified-loop-condition": "error",
		"no-unused-expressions": [
			"error",
			{
				"allowShortCircuit": false,
				"allowTernary": true,
				"allowTaggedTemplates": false
			}
		],
		"no-unused-labels": "error",
		"no-useless-call": "error",
		"no-useless-catch": "error",
		"no-useless-concat": "error",
		"no-useless-escape": "error",
		"no-useless-return": "error",
		"no-void": "error",
		"no-warning-comments": "off",
		"no-with": "error",
		"prefer-named-capture-group": "off",
		"prefer-promise-reject-errors": ["error", { "allowEmptyReject": true }],
		"radix": ["error", "as-needed"],
		"require-await": "off",
		"require-unicode-regexp": "off",
		"vars-on-top": "error",
		"wrap-iife": ["error", "inside", { "functionPrototypeMethods": false }],
		"yoda": "error",

		"strict": ["off", "global"],

		"init-declarations": "off",
		"no-delete-var": "error",
		"no-label-var": "error",
		"no-restricted-globals": "off",
		"no-shadow": [
			"error",
			{ "allow": ["reject", "resolve", "response", "res", "request", "req", "error", "err"] }
		],
		"no-shadow-restricted-names": "error",
		"no-undef": "error",
		"no-undef-init": "error",
		"no-undefined": "warn",
		"no-unused-vars": [
			"error",
			{ "vars": "all", "args": "all", "argsIgnorePattern": "[iI]gnore" , "ignoreRestSiblings": true }
		],
		"no-use-before-define": [
			"error",
			{ "functions": false, "classes": true, "variables": true }
		],

		"callback-return": "off",
		"node/callback-return": "off",
		"global-require": "off",
		"node/global-require": "warn",
		"handle-callback-err": "off",
		"node/handle-callback-err": ["error", "^(err|error|anySpecificError)$"],
		"no-buffer-constructor": "error",
		"no-mixed-requires": "off",
		"node/no-mixed-requires": "off",
		"no-new-require": "off",
		"node/no-new-require": "error",
		"no-path-concat": "off",
		"node/no-path-concat": "error",
		"no-process-env": "off",
		"node/no-process-env": "error",
		"no-process-exit": "off",
		"node/no-process-exit": "warn",
		"no-restricted-modules": "off",
		"node/no-restricted-modules": "off",
		"no-sync": "off",
		"node/no-sync": ["error", { "allowAtRootLevel": true }],

		"array-bracket-newline": ["error", { "multiline": true, "minItems": null }],
		"array-bracket-spacing": ["error", "never"],
		"array-element-newline": ["error", { "multiline": true, "minItems": null }],
		"block-spacing": ["error", "always"],
		"brace-style": ["error", "1tbs", { "allowSingleLine": true }],
		"camelcase": [
			"error",
			{ "properties": "always", "ignoreDestructuring": false }
		],
		"capitalized-comments": [
			"error",
			"always",
			{
				"ignorePattern": "null",
				"ignoreInlineComments": false,
				"ignoreConsecutiveComments": true
			}
		],
		"comma-dangle": ["error", "only-multiline"],
		"comma-spacing": ["error", { "before": false, "after": true }],
		"comma-style": ["error", "last"],
		"computed-property-spacing": ["error", "never"],
		"consistent-this": "off",
		"eol-last": ["error", "always"],
		"func-call-spacing": ["error", "never"],
		"func-name-matching": "off",
		"func-names": ["error", "as-needed", { "generators": "as-needed" }],
		"func-style": ["error", "declaration", { "allowArrowFunctions": true }],
		"function-paren-newline": ["error", "never"],
		"id-blacklist": "off",
		"id-length": "off",
		"id-match": "off",
		"implicit-arrow-linebreak": ["error", "beside"],
		"indent": ["error", "tab"],
		"jsx-quotes": ["error", "prefer-single"],
		"key-spacing": [
			"error",
			{ "beforeColon": false, "afterColon": true, "mode": "strict" }
		],
		"keyword-spacing": ["error", { "before": true, "after": true }],
		"line-comment-position": ["error", "above"],
		"linebreak-style": ["error", "windows"],
		"lines-around-comment": "off",
		"lines-between-class-members": [
			"error",
			"always",
			{ "exceptAfterSingleLine": false }
		],
		"max-depth": ["error", { "max": 4 }],
		"max-len": [
			"off",
			{
				"code": 100,
				"tabWidth": 4,
				"comments": 100,
				"ignoreComments": false,
				"ignoreTrailingComments": false,
				"ignoreUrls": true,
				"ignoreStrings": true,
				"ignoreTemplateLiterals": true,
				"ignoreRegExpLiterals": true
			}
		],
		"max-lines": "off",
		"max-lines-per-function": "off",
		"max-nested-callbacks": "off",
		"max-params": "off",
		"max-statements": "off",
		"max-statements-per-line": "off",
		"multiline-comment-style": ["error", "separate-lines"],
		"multiline-ternary": ["error", "never"],
		"new-cap": [
			"error",
			{ "newIsCap": true, "capIsNew": false, "properties": false }
		],
		"new-parens": "error",
		"newline-per-chained-call": ["error", { "ignoreChainWithDepth": 3 }],
		"no-array-constructor": "error",
		"no-bitwise": "error",
		"no-continue": "error",
		"no-inline-comments": "error",
		"no-lonely-if": "error",
		"no-mixed-operators": [
			"error",
			{
				"groups": [
					["%", "**"],
					["%", "+"],
					["%", "-"],
					["%", "*"],
					["%", "/"],
					["**", "+"],
					["**", "-"],
					["**", "*"],
					["**", "/"],
					["&", "|", "^", "~", "<<", ">>", ">>>"],
					["==", "!=", "===", "!==", ">", ">=", "<", "<="],
					["&&", "||"],
					["in", "instanceof"]
				],
				"allowSamePrecedence": false
			}
		],
		"no-mixed-spaces-and-tabs": "error",
		"no-multi-assign": "error",
		"no-multiple-empty-lines": ["error", { "max": 2 }],
		"no-negated-condition": "off",
		"no-nested-ternary": "error",
		"no-new-object": "error",
		"no-plusplus": ["error", { "allowForLoopAfterthoughts": true }],
		"no-restricted-syntax": [
			"error",
			{
				"selector": "ForInStatement",
				"message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
			},
			{
				"selector": "LabeledStatement",
				"message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
			},
			{
				"selector": "WithStatement",
				"message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
			}
		],
		"no-tabs": ["error", { "allowIndentationTabs": true }],
		"no-ternary": "off",
		"no-trailing-spaces": [
			"error",
			{ "skipBlankLines": false, "ignoreComments": false }
		],
		"no-underscore-dangle": "error",
		"no-unneeded-ternary": ["error", { "defaultAssignment": false }],
		"no-whitespace-before-property": "error",
		"nonblock-statement-body-position": ["error", "beside"],
		"object-curly-newline": [
			"error",
			{ "multiline": true, "minProperties": 4, "consistent": true }
		],
		"object-curly-spacing": ["error", "always"],
		"object-property-newline": [
			"error",
			{ "allowAllPropertiesOnSameLine": true }
		],
		"one-var": ["error", "never"],
		"one-var-declaration-per-line": ["error", "always"],
		"operator-assignment": ["error", "always"],
		"operator-linebreak": ["error", "after", { "overrides": { "=": "none" } }],
		"padded-blocks": ["off", "always", { "allowSingleLineBlocks": true }],
		"padding-line-between-statements": "off",
		"prefer-object-spread": "error",
		"quote-props": [
			"error",
			"as-needed",
			{ "keywords": false, "unnecessary": true, "numbers": false }
		],
		"quotes": [
			"error",
			"single",
			{ "avoidEscape": true, "allowTemplateLiterals": true }
		],
		"semi": ["error", "always"],
		"semi-spacing": ["error", { "before": false, "after": true }],
		"semi-style": ["error", "last"],
		"sort-keys": "off",
		"sort-vars": "off",
		"space-before-blocks": ["error", "always"],
		"space-before-function-paren": [
			"error",
			{
				"anonymous": "always",
				"named": "always",
				"asyncArrow": "always"
			}
		],
		"space-in-parens": ["error", "never"],
		"space-infix-ops": "error",
		"space-unary-ops": [
			"error",
			{
				"words": true,
				"nonwords": false
			}
		],
		"spaced-comment": ["error", "always"],
		"switch-colon-spacing": ["error", { "after": true, "before": false }],
		"template-tag-spacing": ["error", "never"],
		"unicode-bom": ["error", "never"],
		"wrap-regex": "off",

		"arrow-body-style": [
			"error",
			"as-needed",
			{ "requireReturnForObjectLiteral": false }
		],
		"arrow-parens": ["error", "always"],
		"arrow-spacing": ["error", { "before": true, "after": true }],
		"constructor-super": "error",
		"generator-star-spacing": ["error", "both"],
		"no-class-assign": "error",
		"no-confusing-arrow": ["error", { "allowParens": true }],
		"no-const-assign": "error",
		"no-dupe-class-members": "error",
		"no-duplicate-imports": "error",
		"no-new-symbol": "error",
		"no-restricted-imports": "off",
		"no-this-before-super": "error",
		"no-useless-computed-key": "error",
		"no-useless-constructor": "error",
		"no-useless-rename": "error",
		"no-var": "error",
		"object-shorthand": [
			"error",
			"always",
			{
				"avoidQuotes": true,
				"ignoreConstructors": true,
				"avoidExplicitReturnArrows": true
			}
		],
		"prefer-arrow-callback": ["error", { "allowUnboundThis": false }],
		"prefer-const": [
			"error",
			{
				"destructuring": "any",
				"ignoreReadBeforeAssign": false
			}
		],
		"prefer-destructuring": [
			"error",
			{
				"VariableDeclarator": {
					"array": false,
					"object": true
				},
				"AssignmentExpression": {
					"array": true,
					"object": true
				}
			},
			{
				"enforceForRenamedProperties": false
			}
		],
		"prefer-numeric-literals": "error",
		"prefer-rest-params": "error",
		"prefer-spread": "error",
		"prefer-template": "error",
		"require-yield": "error",
		"rest-spread-spacing": ["error", "always"],
		"sort-imports": "off",
		"symbol-description": "error",
		"template-curly-spacing": ["error", "never"],
		"yield-star-spacing": ["error", "both"],
		"no-loss-of-precision": "error",
		"no-promise-executor-return": "error",
		"no-unreachable-loop": "error"
	}
}
